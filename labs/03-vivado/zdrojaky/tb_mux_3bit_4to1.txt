library ieee;
use ieee.std_logic_1164.all;

entity tb_comparator_4bit is
end entity tb_comparator_4bit;

architecture testbench of tb_comparator_4bit is

    signal s_a           : std_logic_vector(3 - 1 downto 0);
    signal s_b           : std_logic_vector(3 - 1 downto 0);
    signal s_c           : std_logic_vector(3 - 1 downto 0);
    signal s_d           : std_logic_vector(3 - 1 downto 0);
    signal s_sel         : std_logic_vector(2 - 1 downto 0);
    signal f : std_logic_vector(3 - 1 downto 0);

begin
    uut_comparator_4bit : entity work.comparator_4bit
        port map(
            a_i           => s_a,
            b_i           => s_b,
            c_i           => s_c,
            d_i           => s_d,
            sel_i         => s_sel,
            f_o => f
        );

        
    test1 : process
    begin
        
        s_a <= "100"; -- 4
        s_b <= "101"; -- 5
        s_c <= "110"; -- 6
        s_d <= "111"; -- 7
        s_sel <= "00";
        
        wait for 100 ns;
        
        s_a <= "100"; -- 4
        s_b <= "101"; -- 5
        s_c <= "110"; -- 6
        s_d <= "111"; -- 7
        s_sel <= "01";
        
        wait for 100 ns;
        
        s_a <= "100"; -- 4
        s_b <= "101"; -- 5
        s_c <= "110"; -- 6
        s_d <= "111"; -- 7
        s_sel <= "10";
        
        wait for 100 ns;
        
        s_a <= "100"; -- 4
        s_b <= "101"; -- 5
        s_c <= "110"; -- 6
        s_d <= "111"; -- 7
        s_sel <= "11";
        
 		wait for 100 ns;
        wait;
       
    end process test1;
    
      

end architecture testbench;
